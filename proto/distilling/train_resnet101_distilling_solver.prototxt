# The train/test net protocol buffer definition
# net: "/home/processyuan/code/NetworkOptimization/deep-retrieval/proto/distilling/conv/train_resnet101_student.prototxt"
# net: "/home/gordonwzhe/code/my-deep-retrieval/proto/distilling/conv/train_resnet101_student_sum.prototxt"
net: "/home/gordonwzhe/code/my-deep-retrieval/proto/distilling/reduced-pca/non-relu/train_resnet101_student.prototxt"
# test_iter specifies how many forward passes the test should carry out.
test_iter: 250
# Carry out testing every 'test_interval' training iterations.
test_interval: 2000
# The base learning rate, momentum and the weight decay of the network.
base_lr: 0.0001
momentum: 0.9
weight_decay: 0.0005
# The learning rate policy
# lr_policy: "multistep"
# gamma: 0.20
# stepvalue: 2500
# stepvalue: 60000
# lr_policy: "fixed"
# Display every 100 iterations
display: 100
# The maximum number of iterations
max_iter: 10000
# snapshot intermediate results
snapshot: 5000
# snapshot_prefix: "/home/processyuan/code/NetworkOptimization/deep-retrieval/caffemodel/distilling/train_resnet101_student"
# snapshot_prefix: "/home/gordonwzhe/code/my-deep-retrieval/caffemodel/distilling/conv/elt-sum/paris/train_resnet101_student_50000"
snapshot_prefix: "/home/gordonwzhe/code/my-deep-retrieval/caffemodel/distilling/reduced-pca/non-relu/train_resnet101_student_9500"
# solver mode: CPU or GPU
solver_mode: GPU
